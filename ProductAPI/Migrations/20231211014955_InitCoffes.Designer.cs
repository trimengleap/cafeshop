// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductApi;

#nullable disable

namespace CoffeApi.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20231211014955_InitCoffes")]
    partial class InitCoffes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoffeLib.Coffee", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .IsUnicode(false)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("Id");

                    b.Property<byte>("Category")
                        .HasColumnType("tinyint")
                        .HasColumnName("Category");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Code");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<double?>("Price")
                        .HasColumnType("float")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("CoffeSM", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "fc1ec19b-ac51-48bb-b16f-1ec6c15332ae",
                            Category = (byte)1,
                            Code = "CFF001",
                            CreatedOn = new DateTime(2023, 12, 11, 8, 49, 54, 961, DateTimeKind.Local).AddTicks(754),
                            Name = "Moca",
                            Price = 3.0
                        },
                        new
                        {
                            Id = "52494a78-461a-4bb6-86bb-0bafe5ad744e",
                            Category = (byte)2,
                            Code = "CFF002",
                            CreatedOn = new DateTime(2023, 12, 11, 8, 49, 54, 961, DateTimeKind.Local).AddTicks(780),
                            Name = "Ice Latte",
                            Price = 4.0
                        },
                        new
                        {
                            Id = "5f947261-8082-44bb-9f8d-6fc4f029bac3",
                            Category = (byte)1,
                            Code = "CFF003",
                            CreatedOn = new DateTime(2023, 12, 11, 8, 49, 54, 961, DateTimeKind.Local).AddTicks(800),
                            Name = "Hot Latte",
                            Price = 5.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
